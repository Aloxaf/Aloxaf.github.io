<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>教程 on Aloxaf&#39;s Blog</title>
    <link>http://www.aloxaf.com/tags/%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in 教程 on Aloxaf&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 10 Nov 2019 13:43:26 +0000</lastBuildDate><atom:link href="http://www.aloxaf.com/tags/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>加速你的 zsh —— 最强 zsh 插件管理器 zplugin/zinit 教程</title>
      <link>http://www.aloxaf.com/2019/11/zplugin_tutorial/</link>
      <pubDate>Sun, 10 Nov 2019 13:43:26 +0000</pubDate>
      
      <guid>http://www.aloxaf.com/2019/11/zplugin_tutorial/</guid>
      <description>&lt;p&gt;&lt;strong&gt;2020-01-26 更新：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Zplugin 已改名 Zinit，不过教程中的内容仍然适用。
阅读时请自行在脑中替换 （&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2020-01-14 更新：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;博主已经叛逃 powerlevel10k 了（注意是 10k 不是 9k）。
p10k 的 Instant Prompt 功能非常好用，它可以在其他插件的加载过程中提供一个精简的 prompt 供使用，相当于后台加载。&lt;/p&gt;
&lt;p&gt;这个功能并不能加快实际的加载速度， 比如 &lt;code&gt;time zsh -ic &#39;exit&#39;&lt;/code&gt; 的结果仍然不会变，但是使用体验提升巨大（体验上几乎是瞬间加载）！&lt;/p&gt;
&lt;p&gt;读到这里的读者建议先尝试一下 p10k（&lt;del&gt;如果很满意就不用往下看了&lt;/del&gt;）。&lt;/p&gt;
&lt;p&gt;我已经去掉了配置文件中所有的 zinit 延迟加载语句，不过 zinit 即使去掉延迟加载功能仍然十分强大，我还是选择继续使用 zinit。
而且如果加载了特别耗时的插件的话，zinit 仍然是有用的。&lt;/p&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zdharma/zinit&#34;&gt;Zinit&lt;/a&gt; 是个冷门但是却强大无比的 zsh 插件管理器，它拥有一个 killer feature —— Turbo mode，可以让插件在后台加载。这意味这你可以先加载最重要的插件，比如语法高亮和自动建议，剩下的可以统统放到后台加载，让你的 zsh 尽快进入可用状态。&lt;/p&gt;
&lt;p&gt;利用这个机制，zinit 可以将 zsh 的启动时间缩短到几十毫秒——以我的配置为例，只需要 35 毫秒左右。而使用传统的插件管理器比如 antigen，需要近 200 毫秒才能加载完成。&lt;/p&gt;
&lt;p&gt;这里有一张图，对比了不同插件管理器的速度（来源：&lt;a href=&#34;https://gist.github.com/laggardkernel/4a4c4986ccdcaf47b91e8227f9868ded&#34;&gt;Comparison of ZSH frameworks and plugin managers&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vintersnow/zsh_plugin_manager_speed/master/result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 zinit 在插件数目变多时速度……似乎更快了？？？
什么鬼，这个大概是实验误差吧，也有可能是第一次启动时编译了自身所以后面变快了。不过 zinit 的速度是毋庸置疑的，哪怕这个插件需要数十秒来加载，只要放在后台加载，一样不影响你的 zsh 启动。&lt;/p&gt;
&lt;p&gt;然而！！这个工具虽然强大，却没多少名气，让人倍感惋惜。&lt;/p&gt;
&lt;p&gt;所以写下这篇文章，希望能有更多人了解到这个工具。
不过本文只涉及了它强大功能的冰山一角，深入研究推荐阅读 &lt;a href=&#34;https://zdharma.org/zinit/wiki/INTRODUCTION/&#34;&gt;Zinit Wiki&lt;/a&gt; 和 Zinit 的 &lt;a href=&#34;https://github.com/zdharma/zinit/blob/master/README.md&#34;&gt;README&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;（虽然说是冰山一角，本文的内容也足以覆盖绝大多数情况了）&lt;/p&gt;
&lt;p&gt;（如果你很懒不想研究的话，文末还有一份完整的示例配置，安装完成后可以直接使用）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xkeysnail 使用指南</title>
      <link>http://www.aloxaf.com/2019/11/xkeysnail_tutorial/</link>
      <pubDate>Sun, 03 Nov 2019 15:33:49 +0000</pubDate>
      
      <guid>http://www.aloxaf.com/2019/11/xkeysnail_tutorial/</guid>
      <description>&lt;h1 id=&#34;emacs-keybings-everywhere&#34;&gt;Emacs keybings Everywhere!&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;xkeysnail 是一个非常强大的 keyboard remapping 工具, 它类似于 xmodmap, 但更为灵活. 不仅能重映射键位, 还能重映射快捷键, 甚至能在不同的程序下使用不同的映射!&lt;/p&gt;
&lt;p&gt;再也不用两套快捷键换来换去了!! ( 早点知道这个东西, 我就不至于练就一身无缝切换快捷键的毫无卵用的本领了&amp;hellip;&lt;/p&gt;
&lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/mooz/xkeysnail&#34;&gt;https://github.com/mooz/xkeysnail&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
